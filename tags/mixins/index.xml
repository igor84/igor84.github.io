<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>mixins on Dr Iggy's Coding Adventures</title><link>https://igor84.github.io/tags/mixins/</link><description>Recent content in mixins on Dr Iggy's Coding Adventures</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 15 Jun 2022 21:33:58 +0200</lastBuildDate><atom:link href="https://igor84.github.io/tags/mixins/index.xml" rel="self" type="application/rss+xml"/><item><title>Mixins in Zig</title><link>https://igor84.github.io/blog/mixins-in-zig/</link><pubDate>Wed, 15 Jun 2022 21:33:58 +0200</pubDate><guid>https://igor84.github.io/blog/mixins-in-zig/</guid><description>What are mixins? Mixins are a way to mix in some common functionality into multiple structs. For example if you have a File and TcpSocket and they have their own different implementations of read(buffer: []u8) method and you want to add convenience methods like readInt(), readStruct() and similar that just call the read() method and format the result, you would usually have to write those methods in one struct and then copy them to the other.</description></item></channel></rss>