<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>zig on Dr Iggy's Coding Adventures</title><link>https://igor84.github.io/tags/zig/</link><description>Recent content in zig on Dr Iggy's Coding Adventures</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 13 Jun 2022 14:05:23 +0200</lastBuildDate><atom:link href="https://igor84.github.io/tags/zig/index.xml" rel="self" type="application/rss+xml"/><item><title>Basics of Allocating and Using Memory</title><link>https://igor84.github.io/blog/basics-of-allocating-and-using-memory/</link><pubDate>Mon, 13 Jun 2022 14:05:23 +0200</pubDate><guid>https://igor84.github.io/blog/basics-of-allocating-and-using-memory/</guid><description>Many of the top used programming languages today use garbage collection and with them we are always taught how manual memory management is hard. I get the feeling that many new programmers don&amp;rsquo;t even try to understand it today.
I want to show here how manual memory management can be not only very easy but also very fun.
Lesson 1: Let Operating System Do It There is a big class of programs that work as command line utilities.</description></item><item><title>Png Reader in Zig</title><link>https://igor84.github.io/blog/png-reader-in-zig/</link><pubDate>Wed, 18 May 2022 19:00:00 +0200</pubDate><guid>https://igor84.github.io/blog/png-reader-in-zig/</guid><description>&lt;p>Although there is already a solid &lt;a href="https://github.com/zigimg/zigimg/">zigimg&lt;/a> image loading library
it didn&amp;rsquo;t quite tick all the checkboxes for me. It doesn&amp;rsquo;t provide the flexibility that I am aiming
for and it is using far more allocations than is necessary. Also since I already wrote a png reader
in &lt;a href="https://dlang.org">DLang&lt;/a> it felt like a good project for learning zig to try to reimplement it
and try to improve on my original design.&lt;/p></description></item></channel></rss>